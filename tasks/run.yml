---
- name: run | Block
  vars:
    __compose_install_dir: "{{ lookup('vars', __role_prefix + '_compose_install_dir') }}"
    __compose_project_root_dir: "{{ lookup('vars', __role_prefix + '_compose_project_root_dir') }}"
    __docker_compose_files: "{{ lookup('vars', __role_prefix + '_docker_compose_files', default=omit) }}"
    __zfs_skip_snapshot: "{{ lookup('vars', __role_prefix + '_zfs_skip_snapshot', default=false) }}"
    __maintenance: "{{ lookup('vars', __role_prefix + '_maintenance', default=false) }}"
    __compose_project_dirs: "{{ lookup('vars', __role_prefix + '_compose_project_dirs') }}"
    __container_name: "{{ lookup('vars', __role_prefix + '_container_name', default=__compose_project_name) }}"
  block:
    - name: run | Pull images
      become: true
      community.docker.docker_compose_v2_pull:
        project_src: "{{ __compose_install_dir.dir }}"
        files: "{{ __docker_compose_files | default(omit) }}"
      register: _docker_compose_pull

    - name: run | Ensure services are started
      become: true
      community.docker.docker_compose_v2:
        project_src: "{{ __compose_install_dir.dir }}"
        pull: "always"
        remove_orphans: true
        wait: true
        wait_timeout: 60
        files: "{{ __docker_compose_files | default(omit) }}"
      register: _docker_compose_up
      when: not __maintenance

    - name: run | Shut down services
      become: true
      community.docker.docker_compose_v2:
        project_src: "{{ __compose_install_dir.dir }}"
        state: "stopped"
        files: "{{ __docker_compose_files | default(omit) }}"
      register: _docker_compose_stop
      when: __maintenance

    - name: run | Check if compose file backup was created
      become: true
      ansible.builtin.stat:
        path: "{{ compose_artificer_compose_file.backup_file | default('/dummy/path') }}"
      register: compose_artificer_compose_file_backup

    - name: run | Remove compose file backup
      become: true
      ansible.builtin.file:
        path: "{{ compose_artificer_compose_file.backup_file }}"
        state: absent
      when: compose_artificer_compose_file_backup.stat.exists
  rescue:
    - name: run | Failure startup
      ansible.builtin.fail:
        msg: "{{ ansible_failed_task }}"
