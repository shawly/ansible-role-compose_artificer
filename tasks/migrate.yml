---
- name: migrate | Block
  vars:
    __migrate_dir: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_migrate_dir') | default(omit) }}"
    __compose_install_dir: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_compose_install_dir') }}"
    __compose_project_root_dir: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_compose_project_root_dir') }}"
    __compose_files: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_compose_files', default=omit) }}"
    __do_migrate: __migrate_dir is defined and __migrate_dir != __compose_install_dir.dir and __migrate_dir != __compose_project_root_dir.dir
    __container_name: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_container_name', default=_compose_artificer_compose_project_name) }}"
    __zfs_datasets: "{{ [__compose_install_dir.dir, __compose_project_root_dir.dir] if __compose_install_dir.dir != __compose_project_root_dir.dir else [__compose_install_dir.dir] }}"
    __zfs_additional_datasets: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_zfs_additional_datasets', default=[]) }}"
    __btrfs_filesystem_label: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_btrfs_filesystem_label') }}"
    __btrfs_subvolume_prefix: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_btrfs_subvolume_prefix') }}"
    __btrfs_subvolumes: "{{ [__compose_install_dir.dir, __compose_project_root_dir.dir] if __compose_install_dir.dir != __compose_project_root_dir.dir else [__compose_install_dir.dir] }}"
    __btrfs_additional_subvolumes: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_btrfs_additional_subvolumes', default=[]) }}"
    __btrfs_mount_options: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_btrfs_mount_options', default={}) }}"
    __btrfs_default_mount_options: "{{ lookup('vars', __compose_artificer_parent_role_prefix + '_btrfs_default_mount_options', default='defaults') }}"
  when: __do_migrate
  block:
    - name: migrate | Check if migrate_dir exists for {{ __compose_artificer_compose_project_name }}
      become: true
      ansible.builtin.stat:
        path: "{{ __migrate_dir }}"
      register: __compose_artificer_migrate_dir_result

    - name: migrate | Shut down all services for {{ __compose_artificer_compose_project_name }}
      become: true
      community.docker.docker_compose_v2:
        project_src: "{{ __migrate_dir }}"
        state: "absent"
        files: "{{ __compose_files | default(omit) }}"
      failed_when: false
      when: __compose_artificer_migrate_dir_result.stat.exists

    - name: migrate | Create datasets for {{ __compose_artificer_compose_project_name }}
      become: true
      community.general.zfs:
        name: "{{ __zfs_root_dataset }}{{ __dataset }}"
        state: present
      when:
        - __compose_artificer_migrate_dir_result.stat.exists
        - ansible_zfs_datasets is defined
        - ansible_zfs_datasets | selectattr('name', '==', __zfs_root_dataset) | length
      loop: "{{ __datasets }}"
      loop_control:
        loop_var: __dataset
      vars:
        __datasets: "{{ [__compose_install_dir.dir, __compose_project_root_dir.dir] if __compose_install_dir.dir != __compose_project_root_dir.dir else [__compose_install_dir.dir] }}"

    - name: migrate | Create subvolumes for {{ __compose_artificer_compose_project_name }}
      become: true
      community.general.btrfs_subvolume:
        name: "{{ __btrfs_subvolume_prefix }}{{ __subvolume_path | regex_replace('^/', '') | replace('/', '-') }}"
        state: present
        filesystem_label: "{{ __btrfs_filesystem_label }}"
      when:
        - __compose_artificer_migrate_dir_result.stat.exists
        - __compose_artificer_btrfs_info is defined
        - __compose_artificer_btrfs_info.filesystems is defined
        - __compose_artificer_btrfs_info.filesystems | selectattr('label', '==', __btrfs_filesystem_label) | length > 0
      loop: "{{ __all_subvolumes }}"
      loop_control:
        loop_var: __subvolume_path
      vars:
        __all_subvolumes: "{{ __btrfs_subvolumes + __btrfs_additional_subvolumes | sort }}"
      register: __btrfs_subvolume_create_results

    - name: migrate | Create mountpoints for btrfs subvolumes for {{ __compose_artificer_compose_project_name }}
      become: true
      ansible.posix.mount:
        path: "{{ __subvolume_create_result.__subvolume_path }}"
        src: "UUID={{ __subvolume_create_result.filesystem.uuid }}"
        state: mounted
        fstype: btrfs
        passno: 2
        opts: "subvol={{ __target_subvolume.path | regex_replace('^/', '') }},{{ __btrfs_mount_options[__subvolume_create_result.__subvolume_path] | default(__btrfs_default_mount_options) }}"
      when:
        - __btrfs_subvolume_create_results is defined
        - __subvolume_create_result.target_subvolume_id is defined
        - __target_subvolume is defined
      loop: "{{ __btrfs_subvolume_create_results.results | default([]) }}"
      loop_control:
        loop_var: __subvolume_create_result
      vars:
        # Find the target subvolume by its ID and get its path
        __target_subvolume: "{{ __subvolume_create_result.filesystem.subvolumes | selectattr('id', '==', __subvolume_create_result.target_subvolume_id) | first }}"

    - name: migrate | Migrate data from old location to default location for {{ __compose_artificer_compose_project_name }}
      become: true
      ansible.posix.synchronize:
        src: "{{ __migrate_dir }}/docker-compose.yml"
        dest: "{{ __compose_install_dir.dir }}/docker-compose.yml"
      delegate_to: "{{ inventory_hostname }}"
      register: __compose_artificer_migration_compose_file
      ignore_errors: true
      when: __compose_artificer_migrate_dir_result.stat.exists

    - name: migrate | Migrate data from old location to default location for {{ __compose_artificer_compose_project_name }}
      become: true
      ansible.posix.synchronize:
        src: "{{ __migrate_dir }}/"
        dest: "{{ __compose_project_root_dir.dir }}/"
      delegate_to: "{{ inventory_hostname }}"
      register: __compose_artificer_migration_data
      when: __compose_artificer_migrate_dir_result.stat.exists

    - name: migrate | Confirm message for {{ __compose_artificer_compose_project_name }}
      ansible.builtin.debug:
        msg: Data migrated from {{ __migrate_dir }} to {{ __compose_install_dir.dir }}
      when: (__compose_artificer_migration_data.changed or __compose_artificer_migration_compose_file.changed) and __compose_artificer_migrate_dir_result.stat.exists
      changed_when: __compose_artificer_migration_data.changed or __compose_artificer_migration_compose_file.changed
  rescue:
    - name: migrate | Failure during migration for {{ __compose_artificer_compose_project_name }}
      ansible.builtin.fail:
        msg: "{{ ansible_failed_task }}"
