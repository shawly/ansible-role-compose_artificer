---
- name: migrate | Block
  vars:
    __migrate_dir: "{{ lookup('vars', __role_prefix + '_migrate_dir') | default(omit) }}"
    __compose_install_dir: "{{ lookup('vars', __role_prefix + '_compose_install_dir') }}"
    __compose_project_root_dir: "{{ lookup('vars', __role_prefix + '_compose_project_root_dir') }}"
    __docker_compose_files: "{{ lookup('vars', __role_prefix + '_docker_compose_files') | default(omit) }}"
    __do_migrate: __migrate_dir is defined and __migrate_dir != __compose_install_dir.dir and __migrate_dir != __compose_project_root_dir.dir
  when: __do_migrate
  block:
    - name: migrate | Check if migrate_dir exists
      become: true
      ansible.builtin.stat:
        path: "{{ __migrate_dir }}"
      register: __migrate_dir_result

    - name: migrate | Shut down all services
      become: true
      community.docker.docker_compose:
        project_src: "{{ __migrate_dir }}/"
        state: absent
        remove_orphans: true
        files: "{{ __docker_compose_files | default(omit) }}"
      when: __migrate_dir_result.stat.exists

    - name: migrate | Create datasets for {{ __compose_project_name }}
      become: true
      community.general.zfs:
        name: "{{ zfs_host_root_pool }}{{ __dataset }}"
        state: present
      register: zfs_dataset
      when: "'zfs' in group_names and __migrate_dir_result.stat.exists"
      loop: "{{ __datasets }}"
      loop_control:
        loop_var: __dataset
      vars:
        __datasets: "{{ [__compose_install_dir.dir, __compose_project_root_dir.dir] if __compose_install_dir.dir != __compose_project_root_dir.dir else [__compose_install_dir.dir] }}"

    - name: migrate | Migrate data from old location to default location
      become: true
      ansible.posix.synchronize:
        src: "{{ __migrate_dir }}/docker-compose.yml"
        dest: "{{ __compose_install_dir.dir }}/docker-compose.yml"
      delegate_to: "{{ inventory_hostname }}"
      register: __migration
      when: __migrate_dir_result.stat.exists

    - name: migrate | Migrate data from old location to default location
      become: true
      ansible.posix.synchronize:
        src: "{{ __migrate_dir }}/"
        dest: "{{ __compose_project_root_dir.dir }}/"
      delegate_to: "{{ inventory_hostname }}"
      register: __migration
      when: __migrate_dir_result.stat.exists

    - name: migrate | Confirm message
      ansible.builtin.debug:
        msg: Data migrated from {{ __migrate_dir }} to {{ __compose_install_dir.dir }}
      when: __migration.changed and __migrate_dir_result.stat.exists
      changed_when: __migration.changed
